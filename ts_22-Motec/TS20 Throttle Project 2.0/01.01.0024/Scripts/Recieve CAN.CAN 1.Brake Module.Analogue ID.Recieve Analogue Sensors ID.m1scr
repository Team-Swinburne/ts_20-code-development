//Your Scheduled Function Events should execute faster than the transmission speed of the CAN message
//or you may miss messages

/*
RxOpenStandard Argument
bus CAN bus 
match CAN id bits to match 
mask CAN id bits to ignore 
bigendian true for big endian, false for little endian 
*/
local h = CanComms.RxOpenStandard(0, 0x154, 0x0, true);

//If message has been received on CAN id 0x154
if (CanComms.RxMessage(h)) {
	
	Brake Output 1 			= CanComms.GetUnsignedInteger(h, 0, 8); //Assign the received bytes to a channel
	Brake Output 2 			= CanComms.GetUnsignedInteger(h, 8, 8);
	Brake Output Average 	= CanComms.GetUnsignedInteger(h, 16, 8);
	Raw ADC Brake 1 		= CanComms.GetUnsignedInteger(h, 24, 16);
	Raw ADC Brake 2 		= CanComms.GetUnsignedInteger(h, 40, 16);		
	
	Raw Voltage Brake 1 = Raw ADC Brake 1*(5/4096); //Calculating Voltage Step from ADC output and 12bit ADC.
	Raw Voltage Brake 2 = Raw ADC Brake 2*(5/4096);
		
	Recieve CAN.CAN 1.Diagnostic = Recieve CAN.CAN 1.Diagnostic.OK;
	Recieve CAN.CAN 1.Ticks = CanComms.GetTicks(h);
}
else if ((System.TicksSince(Recieve CAN.CAN 1.Ticks) * System.TickPeriod()) >= CAN.CAN Timeout Delay) {
}