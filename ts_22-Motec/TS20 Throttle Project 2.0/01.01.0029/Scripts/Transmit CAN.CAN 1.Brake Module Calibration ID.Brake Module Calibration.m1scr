local h = CanComms.TxOpen(true); 	//false for little endian, true for big endian

CanComms.TxInitialise(h, 4); 		//Initialise the message, specify the length of the message in bytes
CanComms.SetUnsignedInteger(h, 0, 8, Convert.ToUnsignedInteger(Raw Brake 1 Minimum)); //Need to convert to an unsignedinteger before transmitting
CanComms.SetUnsignedInteger(h, 8, 8, Convert.ToUnsignedInteger(Raw Brake 1 Maximum));
CanComms.SetUnsignedInteger(h, 16, 8, Convert.ToUnsignedInteger(Raw Brake 2 Minimum));
CanComms.SetUnsignedInteger(h, 24, 8, Convert.ToUnsignedInteger(Raw Brake 2 Maximum));


if (CanComms.TxStandard(h,0,0x15F))
{
	Digital Sensors TX Status = Digital Sensors TX Status.OK;
}
else
{
	Digital Sensors TX Status = Digital Sensors TX Status.Transmit Warning;
}